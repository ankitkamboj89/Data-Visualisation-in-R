"two","diamonds",2
"ace","diamonds",1
"king","hearts",13
"queen","hearts",12
"jack","hearts",11
"ten","hearts",10
"nine","hearts",9
"eight","hearts",8
"seven","hearts",7
"six","hearts",6
"five","hearts",5
"four","hearts",4
"three","hearts",3
"two","hearts",2
"ace","hearts",1
shuffle <- function(){
random <- sample(1:52, 52)
deck[random, ]
}
"face","suit","value"
"king","spades",13
"queen","spades",12
"jack","spades",11
"ten","spades",10
"nine","spades",9
"eight","spades",8
"seven","spades",7
"six","spades",6
"five","spades",5
"four","spades",4
"three","spades",3
"two","spades",2
"ace","spades",1
"king","clubs",13
"queen","clubs",12
"jack","clubs",11
"ten","clubs",10
"nine","clubs",9
"eight","clubs",8
"seven","clubs",7
"six","clubs",6
"five","clubs",5
"four","clubs",4
"three","clubs",3
"two","clubs",2
"ace","clubs",1
"king","diamonds",13
"queen","diamonds",12
"jack","diamonds",11
"ten","diamonds",10
"nine","diamonds",9
"eight","diamonds",8
"seven","diamonds",7
"six","diamonds",6
"five","diamonds",5
"four","diamonds",4
"three","diamonds",3
"two","diamonds",2
"ace","diamonds",1
"king","hearts",13
"queen","hearts",12
"jack","hearts",11
"ten","hearts",10
"nine","hearts",9
"eight","hearts",8
"seven","hearts",7
"six","hearts",6
"five","hearts",5
"four","hearts",4
"three","hearts",3
"two","hearts",2
"ace","hearts",1
shuffle <- function(deck){
random <- sample(1:52, 52)
deck[random, ]
}
random <- sample(1:52, 1)
random
shuffle1 <- function(deck) {
random<- sample(1:52, 1, replace = TRUE)
deck [random, ]
}
shuffle1()
shuffle1()
card <- read.csv("~/card.csv")
View(card)
View(card)
shuffle1()
shuffle1()
shuffle1 <- function(card) {
random<- sample(1:52, 1, replace = TRUE)
card [random, ]
}
shuffle1()
card
card <- card
card <- card ()
card3 <- card
card3 <- data.frame (card)
card4 <- data.frame (card)
shuffle1 <- function(card4) {
random<- sample(1:52, 1, replace = TRUE)
card4 [random, ]
}
shuffle1()
library(tidyverse)
install.packages(tidyverse)
install.packages(tibble)
library(tibble)
library(tidyr)
install.packages("tidyr")
install.packages("tidyverse")
library("tidyverse")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
z, 555, z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
a<-c(1:4)
b<-c(0,10)
a+b
c(1:4)+c(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(1,10,100)
z<- c(1, 2, 3, 4) + c(0, 10, 100)
p<- c(1, 2, 3, 4) + c(0, 10, 100)
c(1,2,3,4)+c(0,10,100)
z * 2 + 1000
my_div
14^40
integer(14^40)
integer(14^30)
integer(14^20)
integer(14^15)
integer(14^10)
integer(14^5)
integer(2^15)
print(14^14)
x1<-c(1:7)
x1
getwd()
setwd('C:\Users\Ankit\Documents\R\R files')
setwd('Users\Ankit\Documents\R\R files')
setwd('R\R files')
setwd('\C:\Users\Ankit\Documents\R\R files')
setwd('C:\Users\Ankit\Documents\R\R files')
setwd('C:\ Users\ Ankit\ Documents\ R\ R files')
getwd()
q()
tannin <- read.csv("~/Subjects/S2_2021/Analysis of observations/Data/tannin.txt", sep="")
View(tannin)
Summary(tannin)
CAT.LM<- lm(grwoth~tannin, data = cat)
cat<- read.table("Data/tannin.txt", header=T)
cat<- read.table("tannin.txt", header=T)
table(tannin)
read.table(tannin)
read.table("tannin")
lm(growth~tannin, data=cat)
cat<-read.table("Data/tannin.txt",header=T)
cat<-read.table("tannin.txt",header=T)
cat<-read.table("tannin",header=T)
cat<-read.table(tannin,header=T)
cat<-read.table("tannin",header=T)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
str(nycfligths13)
?flights
view(flights)
flights
fliter(flights, month==1, day==1)
filter(flights, month==1, day==1)
custdata <- read.table("~/Subjects/S2_2021/Computational Data Analysis/Data/custdata.RDS", header=TRUE, quote="\"")
View(custdata)
filter(flights, arr_delay== NA)
(a<-filter(flights, arr_delay== NA))
a
print(a)
(a<-filter(flights, arr_delay= NA))
a1<-filter(flights, flights$arr_delay>=120)
a1
a2<-filter(flights, flights$dest== ("IAH") | flights$dest=="HOU")
d2
a2
a3<-filter(flights, flights$carrier== ("UA") | flights$carrier=="DL" | flights$carrier=="AA")
A3
a3
a4<-filter(flights, flights$carrier=7 | flights$carrier=8 | flights$month=9)
a4<-filter(flights, flights$carrier==7 | flights$carrier==8 | flights$month==9)
a5<-filter(flights, flights$arr_delay>=120 & flights$arr_delay==0)
a5
a5<-filter(flights, flights$arr_delay>=120 & flights$arr_delay<=0)
a5
a5<-filter(flights, flights$arr_delay>=120 & flights$dep_delay<=0)
a5
a6<-filter(flights, flights$arr_delay<=-30 & flights$dep_delay>=60)
a6
a6<-filter(flights, flights$arr_delay-flights$dep_delay>=30)
a6
a6<-filter(flights, flights$arr_delay-flights$dep_delay>=-30)
a6
airlines
a6<-filter(flights, dep_time>=000 & dep<=600)
a6<-filter(data=flights, dep_time>=000 & dep<=600)
a6<-filter(data=flights, flights$dep_time>=000 & flights$dep<=600)
a6<-filter(data=flights, flights$dep_time >=000 & flights$dep_time<=600)
a6<-filter(data=flights, flights$dep_time >=001 & flights$dep_time<=600)
a6<-filter(data=flights, flights$dep_time == 2400 |  flights$dep_time<=600)
summary(flights$dep_time)
a6<-filter(data=flights, flights$dep_time == 2400 |  flights$dep_time<=600)
a6<-filter(data=flights, flights$dep_time == 2400 |  flights$dep_time<=600)
filter(flights, dep_time <= 600 | dep_time == 2400)
a6<-filter(flights, flights$dep_time == 2400 |  flights$dep_time<=600)
a7<-tibble(flights$dep_time = NA)
a6<-filter(flights, flights$dep_time = NA)
a6<-filter(flights, flights$dep_time == NA)
a6
a6<-filter(flights, is.na(flights$dep_time))
a6
arrange(flights, year, month, day)
arrange(flights, desc(year, month, day))
arrange(flights, desc (year, month, day))
arrange(flights, desc (month))
a8<-arrange(flights, is.na(arr_time))
a8
a8<-arrange(flights, is.na(month))
a8
a8<-arrange(flights, is.na(month), month)
a8
a8<-arrange(flights, is.na(dep_time), dep_time)
a8
a8<-arrange(flights, desc(is.na(dep_time), dep_time))
a8
arrange(flights, dep_delay)
arrange(flights, (distance/air_time))
rename(flights, tailname = tail_name)
rename(flights, tailnum = tail_name)
rename(flights, tailname = tailnum)
select(flights, dep_time, dep_delay, arr_time, arr_delay)
select(flights, starts_with("dep_"), starts_with("arr_"))
select(flights, dep_time, dep_time, arr_time, arr_delay)
select(flights, contains("TIME"))
flights<-select(flights, year:day, ends_with("delay"), distance, air_time)
library(flights)
library(nycflights13)
flights2<-select(flights, year:day, ends_with("delay"), distance, air_time)
mutate(flights, gain= arr_delay - dep_delay, speed = distance/air time * 60)
mutate(flights2, gain= arr_delay - dep_delay, speed = distance/air time * 60)
mutate(flights2, gain= arr_delay - dep_delay, speed = distance/air time * 60)
mutate(flights2, flights2$gain= flights2$arr_delay - flights2$dep_delay, flights2$speed = flights2$distance/ flights2$air time * 60)
mutate(flights2, gain= flights2$arr_delay - flights2$dep_delay, speed = flights2$distance/ flights2$air time * 60)
mutate(flights2, gain= flights2$arr_delay - flights2$dep_delay, speed = (flights2$distance / flights2$air time) * 60)
mutate(flights2, gain= flights2$arr_delay - flights2$dep_delay, speed = ((flights2$distance / flights2$air time) * 60))
mutate(flights2,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
mutate(flights2, gain= flights2$arr_delay - flights2$dep_delay, speed = ((flights2$distance / flights2$air_time) * 60))
by_dest<- group_by(flights, dest)
delay<- summarize(by_dest, count = n(), dist=mean(distance, na.rm=TRUE), delay = mena (arr_delay, na.rm = TRUE))
delay<- summarize(by_dest, count = n(), dist=mean(distance, na.rm=TRUE), delay = mean (arr_delay, na.rm = TRUE))
delay <- fliter(delay, count>20, dest != "HNL")
delay <- filter(delay, count>20, dest != "HNL")
ggplot(data = delay, mapping = aes(x=dist, y=delay)) + geam_oint (aes(size=count), alpha = 1/3) + geom_smooth(se=FALSE)
ggplot(data = delay, mapping = aes(x=dist, y=delay)) + geam_point (aes(size=count), alpha = 1/3) + geom_smooth(se=FALSE)
ggplot(data = delay, mapping = aes(x=dist, y=delay)) + geom_point (aes(size=count), alpha = 1/3) + geom_smooth(se=FALSE)
?summarize
?summarize
delayed<-group_by(flights, year, month)
summarize(delayed, delay1=mean(dep_delay, na.rm = TRUE))
by_dest<- group_by(flights, dest)
delay <- summarize(by_dest, count = n(), dist=mean(distance, na.rm=TRUE), delay= mean(arr_delay, na.rm=TRUE))
flights %>% group_by(year,month,day) %>% summarize(delay=mean(dep_delay, na.rm=TRUE))
pnorm(2500, mean=3020, sd=502, upper.tail=FALSE)
pnorm(2500, mean=3020, sd=502, lower.tail=FALSE)
pnorm(2500, mean=3020, sd=502)
dbinom(1, size=5, prob=0.15)
+dbinom(2, size=5, prob=0.15)
+dbinom(3, size=5, prob=0.15)
+dbinom(4, size=5, prob=0.15)
+dbinom(5, size=5, prob=0.15)
+ dbinom(5, size=5, prob=0.15)
+ dbinom(5, size=5, prob=0.15)
A < - dbinom(1, size=5, prob=0.15) +
+ dbinom(2, size=5, prob=0.15) +
+ dbinom(3, size=5, prob=0.15) +
+ dbinom(4, size=5, prob=0.15) +
+ dbinom(5, size=5, prob=0.15)
dbinom(1, size=5, prob=0.15) +
+ dbinom(2, size=5, prob=0.15) +
+ dbinom(3, size=5, prob=0.15) +
+ dbinom(4, size=5, prob=0.15) +
+ dbinom(5, size=5, prob=0.15)
pbinom(180,400,.5)
pnorm(180/400,.5, sqrt(.5*.5/400))
pi.hat.obs <- 180/400
pi.hat.se <- sqrt(pi.hat.obs * (1 - pi.hat.obs)/400)
LL <- pi.hat.obs - 1.96 * pi.hat.se
UL <- pi.hat.obs + 1.96 * pi.hat.se
c(LL, UL)
phi.hat.diab<-(4000/80000)/(3000/75000)
phi.hat.diab
phi.hat.obs<-(4000/80000)/(3000/75000)
phi.hat.obs
n.male<-84000
n.female<-78000
pi.hat.obs<-(4000+3000)/(80000+75000)
log.phi.hat.se<- sqrt(1/(n.male.pi.hat.obs*(1-pi.hat.obs)) + 1 / (n.female*pi.hat.obs *(1-pi.hat.obs)))
log.phi.hat.obs<-log(phi.hat.obs)
p.value<- 1- pnorm (log.phi.hat.obs,0,log.phi.hat.se)
p.value
phi.hat.obs<-(4000/80000)/(3000/75000)
phi.hat.obs
n.male<-84000
n.female<-78000
pi.hat.obs<-(4000+3000)/(80000+75000)
log.phi.hat.se <- sqrt(1/(n.male*pi.hat.obs*(1-pi.hat.obs)) + 1 / (n.female*pi.hat.obs *(1-pi.hat.obs)))
log.phi.hat.obs<-log(phi.hat.obs)
p.value<- 1- pnorm (log.phi.hat.obs,0,log.phi.hat.se)
p.value
phi.hat.obs<-(4000/80000)/(3000/75000)
phi.hat.obs
n.male<-84000
n.female<-78000
pi.hat.obs<-(4000+3000)/(80000+75000)
log.phi.hat.se <- sqrt(1/(n.male*pi.hat.obs*(1-pi.hat.obs)) + 1 / (n.female*pi.hat.obs *(1-pi.hat.obs)))
log.phi.hat.obs<-log(phi.hat.obs)
p.value<- pnorm (log.phi.hat.obs,0,log.phi.hat.se)
p.value
log.phi.hat.se <- sqrt(1/(n.male*pi.hat.obs*(1-pi.hat.obs)) + 1 / (n.female*pi.hat.obs *(1-pi.hat.obs)))
log.phi.hat.se
phi.hat.obs<-(4000/80000)/(3000/75000)
phi.hat.obs
log.phi.hat.se <- sqrt(1/(n.male*pi.hat.obs*(1-pi.hat.obs)) + 1 / (n.female*pi.hat.obs *(1-pi.hat.obs)))
log.phi.hat.se
log.phi.hat.obs<-log(phi.hat.obs)
log.phi.hat.obs
p.value
?rmarkdown
tinytex::install_tinytex()
\usepackage[utf8]{inputenc}
\DeclareUnicodeCharacter{00B2}{\ensuremath{{}^2}}
\usepackage[utf8]{inputenc}
setwd("~/Subjects/S2_2021/Analysis of observations/Data")
slt <- read.txt(file='poh.txt',sep=',',header=T)
slt <- read.table(file='poh.txt',sep=',',header=T)
slt <- read.table(file='poh1.txt',sep=',',header=T)
slt <- read.table(file='poh1.txt',sep=',',header=T)
summary(slt)
smoke <- table(slt$group,slt$results)
smoke
Table = xtabs(Count ~ Group + Result, data=Poh)
Table = xtabs(Count ~ Group + Result, data=Poh1)
Table = xtabs(Count ~ Group + Result, data=slt)
Table = xtabs(Group + Result, data=slt)
view(slt)
slt <- read.table(file='poh1.txt',header=T)
summary(slt)
view(slt)
smoke <- table(slt$group,slt$results)
Table = xtabs(Group + Result, data=slt)
smoke
Table = xtabs (count ~ Group + Result, data=slt)
Table = xtabs (count ~ Group + Result, data=slt)
library(data.table)
Table = xtabs (count ~ Group + Result, data=slt)
Table = xtabs (Count ~ Group + Result, data=slt)
Table
setwd("~/Subjects/S2_2021/Analysis of observations/Data")
slt <- read.table(file='poh1.txt',header=T)
getwd()
?chisq.test()
setwd("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data")
data2000<-read.csv(us_data_2000)
setwd("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data")
data2000<-read.csv(us_data_2000)
data2000<-read.csv(us_data_2000.csv)
data2000<-read.table(us_data_2000.csv)
data2000<-read.table(us_data_2000.csv)
data2000<-read.table(us_data_2000.csv)
data2000<-read.table(C:\Users\Ankit\Documents\Subjects\S2_2021\Computational Data Analysis\Project 1\Data\us_data_2000.csv)
data2000<-read.csv(C:\Users\Ankit\Documents\Subjects\S2_2021\Computational Data Analysis\Project 1\Data\us_data_2000.csv)
setwd("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data")
us_data_2000 <- read.csv("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data/us_data_2000.csv")
View(us_data_2000)
summary(us_data_2000)
data_dictionary <- read.csv("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data/data_dictionary.csv", sep="")
View(data_dictionary)
summary(us_data_2000)
summary(us_data)
us_data <- read.csv("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data/us_data.csv")
View(us_data)
summary(us_data)
us_data <- read.d<- read.csv("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data/us_data.csv")
d<- read.csv("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data/us_data.csv")
unique(d$MINE_ID)
tempdir()
dir.create(tempdir())
library(dplyr)
library(ggplot2)
ggplot(d) +
geom_bar(aes(x=d$CAL_YR)) +
theme(text = element_text(size= 22))
is.na(d$CAL_YR)
sum(is.na(d$CAL_YR))
mutate(d, year_qtr=c(d$CAL_YR,"_",d$CAL_QTR))
rlang::last_error()
mutate(d, year_qtr=c(d$CAL_QTR,d$CAL_YR))
mutate(d, year_qtr= paste(d$CAL_QTR, ,d$CAL_YR)
ggplot(d) +
geom_bar(aes(x=d$year_qtr)) +
theme(text = element_text(size= 22))
mutate(d, year_qtr= paste(d$CAL_QTR, ,d$CAL_YR))
mutate(d, year_qtr= d$CAL_QTR + d$CAL_YR)
mutate(d, year_qtr= c(d$CAL_QTR + d$CAL_YR))
ggplot(d) +
geom_bar(aes(x=d$year_qtr)) +
theme(text = element_text(size= 22))
ggplot(d) +
geom_bar(aes(x=year_qtr)) +
theme(text = element_text(size= 22))
d<- read.csv("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data/us_data.csv")
summary(d$Q_Yr)
ggplot(d) +
geom_bar(aes(x=Time_QR)) +
theme(text = element_text(size= 22))
d<- read.csv("~/Subjects/S2_2021/Computational Data Analysis/Project 1/Data/us_data.csv")
ggplot(d) +
geom_bar(aes(x=Time_QR)) +
theme(text = element_text(size= 22))
d <- within(d, {
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 600] <- "Night"
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 1200] <- "Morning"
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 1800] <- "Afernoon"
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 2400] <- "Evening"
ACCIDENT_TIME_CAT [ACCIDENT_TIME == 9999] <- "Error"
})
d <- within(d, {
ACCIDENT_TIME_CAT <- NA
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 600] <- "Night"
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 1200] <- "Morning"
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 1800] <- "Afernoon"
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 2400] <- "Evening"
ACCIDENT_TIME_CAT [ACCIDENT_TIME == 9999] <- "Error"
})
ggplot(d) +
geom_bar(aes(x=ACCIDENT_TIME_CAT)) +
theme(text = element_text(size= 22))
d <- within(d, {
ACCIDENT_TIME_CAT <- NA
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 600] <- "Night"
ACCIDENT_TIME_CAT [ACCIDENT_TIME > 600 & ACCIDENT_TIME < 1200] <- "Morning"
ACCIDENT_TIME_CAT [ACCIDENT_TIME > 1200 & ACCIDENT_TIME < 1800] <- "Afernoon"
ACCIDENT_TIME_CAT [ACCIDENT_TIME > 1800 & ACCIDENT_TIME < 2400] <- "Evening"
ACCIDENT_TIME_CAT [ACCIDENT_TIME == 9999] <- "Error"
})
ggplot(d) +
geom_bar(aes(x=ACCIDENT_TIME_CAT)) +
theme(text = element_text(size= 22))
d <- within(d, {
ACCIDENT_TIME_CAT <- NA
ACCIDENT_TIME_CAT [ACCIDENT_TIME < 600] <- "Night"
ACCIDENT_TIME_CAT [ACCIDENT_TIME > 600 & ACCIDENT_TIME < 1200] <- "Morning"
ACCIDENT_TIME_CAT [ACCIDENT_TIME > 1200 & ACCIDENT_TIME < 1800] <- "Afternoon"
ACCIDENT_TIME_CAT [ACCIDENT_TIME > 1800 & ACCIDENT_TIME < 2400] <- "Evening"
ACCIDENT_TIME_CAT [ACCIDENT_TIME == 9999] <- "Error"
})
ggplot(d) +
geom_bar(aes(x=ACCIDENT_TIME_CAT)) +
theme(text = element_text(size= 22))
NA_Time <- d[!is.na(d$ACCIDENT_TIME),]
nrow(d)
nrow(NA_Time)
ggplot(d) +
geom_bar(aes(x=ACCIDENT_TIME_CAT)) +
theme(text = element_text(size= 22))
!is.na(d$ACCIDENT_TIME)
is.na(d$ACCIDENT_TIME)
sum(is.na(d$ACCIDENT_TIME))
d_NAr_Time <- d[!is.na(d$ACCIDENT_TIME),]
View(d_NAr_Time)
d_NAr_Time <- within(d_NAr_Time, {
ACCIDENT_TIME_CAT <- NA
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 000 & ACCIDENT_TIME <= 600] <- "Night"
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 600 & ACCIDENT_TIME <= 1200] <- "Morning"
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 1200 & ACCIDENT_TIME <= 1800] <- "Afternoon"
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 1800 & ACCIDENT_TIME <= 2400] <- "Evening"
ACCIDENT_TIME_CAT [ACCIDENT_TIME == 9999] <- "Error in recording"
})
View(d_NAr_Time)
mutate(d_NAr_Time, {
ACCIDENT_TIME_CAT <- NA
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 000 & ACCIDENT_TIME <= 600] <- "Night"
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 600 & ACCIDENT_TIME <= 1200] <- "Morning"
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 1200 & ACCIDENT_TIME <= 1800] <- "Afternoon"
ACCIDENT_TIME_CAT [ACCIDENT_TIME >= 1800 & ACCIDENT_TIME <= 2400] <- "Evening"
ACCIDENT_TIME_CAT [ACCIDENT_TIME == 9999] <- "Error in recording"
})
gc()
